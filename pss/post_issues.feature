@api @issues @poi01 @functional @smoke @loginUser1 @deleteGame 
Feature: Post issues
  Test performed on API endpoints, contains test cases related to the creation of issues with POST method.

  Scenario: Create an issue
    Given the user creates a game with:
      | Key       | value     |
      | name      | Game Test |
      | deck.name | Fibonacci | 
    And the user sets the following request body for create an issue:
      | Key         | value             |
      | name        | Test Issue        |
      | description | Issue Created     |
    When the user sends a "POST" request to "/planning-poker/games/<Game.id>/issues"
    And the response body should verify the issue with:
      | validName                | true          |
      | issues.name              | Test Issue    |
      | issues.description       | Issue Created |
      | issues.issueVotes        | []            |
      | issues.isAutoGenerated   | false         | 
    And the response schema should be verified with "create_issue"
    And the response status code should be 201
 

 @decks06 @decks07 @decks @negative @boundary @wip
  Scenario: Verify that is not to create a new voting system with an empty name or without cards.
    Given the "user1" logs into the PPS
    When the user clicks on the Voting Systems option in the navbar
    And the user selects from the menu the "+" option to "add" a custom voting system
    And the user fill the deck field with:
      | Key                  | value               |
      | Voting System Cards  | 1,2,3,4,5,6         |
    Then the user should see the "Voting system name is required." error message on "name-helper-text"
    And the user should not be able to click on "Save"  
    And the user fill the deck field with:
      | Key                  | value               |
      | Voting System Cards  | (EmptyString)       |
    And the user should see the "Voting system name is required." error message on "name-helper-text"

      //"uiProductionTests": "cucumber-js -p default --tags \"@ui and not @onlyLocal\" -- --selenium-address=http://selenium-chrome:4444/wd/hub",
        

        before_script:
    - echo "*** Downloading and setting up the latest Chrome driver... ***"
    - wget https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
    - sudo apt-get update -qy && sudo apt-get install -y unzip
    - unzip chromedriver_linux64.zip
    - chmod +x chromedriver
    - export PATH=$PATH:$PWD
    - rm chromedriver_linux64.zip